@using ValidationWeb.ViewModels
@model StudentDrillDownViewModel

<div class="row tbmargin10">
    @if (Model.IsStateMode)
    {
        <h2 class="vp-body-header justify-content-start align-self-center">@(Model.ReportName) Student Details for All Minnesota Districts</h2>
    }
    else
    {
        if (Model.OrgType == OrgType.School)
        {
            <h2 class="vp-body-header justify-content-start align-self-center">@(Model.ReportName) Student Details for @Model.SchoolName (@Model.SchoolId.ToString())</h2>
        }
        else
        {
            <h2 class="vp-body-header justify-content-start align-self-center">@(Model.ReportName) Student Details for @Model.EdOrgName (@Model.EdOrgId.ToString())</h2>
        }
    }
</div>
<div id="requestedReportContent" class="row">

    @* this is a terrible hack *@
    @if (@Model.ReportType == StudentDrillDownReportType.Demographics || Model.ReportType == StudentDrillDownReportType.Programs)
    {
        <!-- report type demo -->
        @:<div class="col-md-2"></div>
        @:<div class="col-md-8">
    }
    else
    {
        <!-- report type NON demo -->
        @: <div class="col-md-12 nopadding">
    }
    @Html.Partial("Partials/StudentDrillDownTable", Model)

    @if (@Model.ReportType == StudentDrillDownReportType.Demographics || Model.ReportType == StudentDrillDownReportType.Programs)
    {
        @:</div>
        @:<div class="col-md-2"></div>
    }
    else
    {
        @: </div>
    }
        </div>
<div id="notes" class="row">
    <div class="vp-body-header">&nbsp;</div>
</div>

    @section scripts {
<script type="text/javascript">
        $(function() {

            $('div.dataTables_scrollBody').css('min-height', '350px');

            var dataTable = $('#reportsTable').DataTable({
                paging: true,
                pagingType: 'full_numbers',
                info: true,
                scrollCollapse: true,
                deferRender: true,
                searching: false,
                serverSide: true,
                processing: true,
                language: {
                    loadingRecords: 'Loading...',
                    processing: 'Loading...', 
                    aria: {
                        paginate: {
                            first:    'First page',
                            previous: 'Previous page',
                            next:     'Next page',
                            last:     'Last page'
                        }
                    }
                },
                dom:"<'row'<'col-md-2'l>>"+
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-md-3'i><'col-md-9 pull-right'p>>",
                ajax: {
                    url:
                        "@Html.Raw(Url.Action(
                             "GetStudentDrilldownData",
                             new
                             {
                                 orgType = Model.OrgType,
                                 schoolId = Model.SchoolId,
                                 edOrgId = Model.EdOrgId,
                                 drillDownColumnIndex = Model.DrillDownColumnIndex,
                                 fourDigitSchoolYear = Model.FourDigitSchoolYear,
                                 reportType = Model.ReportType
                             }))",
                    complete: function () {
                        var dataTable = $($("#reportsTable").DataTable().table().header());
                        dataTable.find('th').removeAttr('aria-label');
                    }
                },
                columns: [
                    {
                        title: 'ID',
                        name: 'studentId',
                        data: 'studentId',
                    },
                    {
                        title: 'Student Name',
                        name: 'studentName',
                        data: function(row, type, set) {
                            return row.studentLastName + ", " + row.studentFirstName + " " + row.studentMiddleName;
                        },
                        render: function(data, type, row, meta) {
                            if (type === 'display') {
                                return row.studentLastName + ", " + row.studentFirstName + " " + row.studentMiddleName;
                            } else {
                                return data;
                            }
                        }
                    }
                    @if (Model.ReportType != StudentDrillDownReportType.Demographics && Model.ReportType != StudentDrillDownReportType.Programs)
                    {
                        <text>
                            ,
                            {
                            @if (@Model.ReportType == StudentDrillDownReportType.EnrolledElsewhere)
                            {
                                <text>
                                    title: 'District School ID',
                                    name: 'schoolId',
                                    data: 'schoolId',
                                </text>
                            }
                            else
                            {
                                <text>
                                title: 'School ID',
                                name: 'schoolId',
                                data: 'schoolId',
                                </text>
                            }
                                render: function(data, type, row, meta) {
                                    if (type === 'display') {
                                        if (data != null) {
                                            return data;
                                        } else {
                                            return "Unknown";
                                        }
                                    } else {
                                        return data;
                                    }
                                }
                            },
                            {
                                title: 'School Name',
                                name: 'schoolName',
                                data: 'schoolName',
                                width: '300px',
                                render: function(data, type, row, meta) {
                                    if (type === 'display') {
                                        if (data != null && data.length > 0) {
                                            return data;
                                        } else {
                                            return "Unknown";
                                        }
                                    } else {
                                        return data;
                                    }
                                }
                            },
                            {
                            @if (@Model.ReportType == StudentDrillDownReportType.EnrolledElsewhere)
                            {
                                @:title: 'Entry Date',
                            }
                            else
                            {
                                @:title: 'Enrolled Date',
                            }
                                name: 'enrolledDate',
                                data: 'enrolledDate',
                                render: function(data, type, row, meta) {
                                if (type === 'display') {
                                    return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                                } else {
                                    return data;
                                }
                            }
                            },
                            {
                            @if (@Model.ReportType == StudentDrillDownReportType.EnrolledElsewhere)
                            {
                                @:title: 'Exit/Withdraw Date',
                            }
                            else
                            {
                                @:title: 'Withdraw Date',
                            }
                                name: 'withdrawDate',
                                data: 'withdrawDate',
                                render: function(data, type, row, meta) {
                                    if (type === 'display') {
                                        return data == null ? "Unknown" : new Date(data).toLocaleDateString("en-US");
                                    } else {
                                        return data;
                                    }
                                }
                            },
                            {
                                title: 'Grade',
                                name: 'grade',
                                data: 'grade',
                                render: function(data, type, row, meta) {
                                    if (type === 'display') {
                                        if (data != null) {
                                            return data;
                                        } else {
                                            return "Unknown";
                                        }
                                    } else {
                                        return data;
                                    }
                                }
                            }</text>
                    }
                    @if (@Model.ReportType == StudentDrillDownReportType.EnrolledElsewhere)
                    {
                        <text>, {
                        title: 'Special Ed Evaluation Status',
                        name: 'specialEdStatus',
                        data: 'specialEdStatus'
                        }</text>
                    }
                ]
            });

            $(dataTable.table().header()).addClass('table-primary');
        });
</script>
    }
